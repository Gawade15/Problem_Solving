// day one of leercode probelm solving solved two sum problem of leetcode using bruteforce approach
//solution is mention below
//problem statement:Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

You can return the answer in any order.
//answer



class Solution {
    public int[] twoSum(int[] nums, int target) {
        for(int i=0;i<nums.length;i++){
            for(int j=i+1;j<nums.length;j++){
                if(nums[i]+nums[j]==target){
                   return new int[]{i,j};
            
                }
            }
        }


       return new int[] {};
    }
}
// problem 2 solved kadane algorithm problem  on GFG
//Given an array Arr[] of N integers. Find the contiguous sub-array(containing at least one number) which has the maximum sum and return its sum

class Solution{

    // arr: input array
    // n: size of array
    //Function to find the sum of contiguous subarray with maximum sum.
    long maxSubarraySum(int arr[], int n){
        
        // Your code here
        long maximum=Integer.MIN_VALUE;
        long sum=0;
        for(int i=0;i<n;i++){
            sum+=arr[i];
            
        
        if(sum>maximum){
           maximum=sum;
        }
         if(sum<0){
               sum=0;
         }
        }
             return maximum;
    }

    
}

